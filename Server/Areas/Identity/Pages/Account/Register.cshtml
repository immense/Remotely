@page
@model RegisterModel
@inject Remotely.Server.Services.IApplicationConfig AppConfig
@using Microsoft.Extensions.Localization
@inject IStringLocalizer Localizer
@{
    ViewData["Title"] =Localizer["Register"];
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    @if (AppConfig.MaxOrganizationCount < 0 || Model.OrganizationCount < AppConfig.MaxOrganizationCount)
    {
        <div class="col-md-4">
            <form asp-route-returnUrl="@Model.ReturnUrl" method="post">
                <h4>@Localizer["Create a new account."]</h4>
                <hr />
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Input.Email">@Localizer["Email"]</label>
                    <input asp-for="Input.Email" class="form-control" />
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.Password">@Localizer["Password"]</label>
                    <input asp-for="Input.Password" class="form-control" />
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.ConfirmPassword">@Localizer["ConfirmPassword"]</label>
                    <input asp-for="Input.ConfirmPassword" class="form-control" />
                    <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                </div>
                <button type="submit" class="btn btn-primary">@Localizer["Register"]</button>
            </form>
        </div>
    }
    else
    {
        <div class="col-sm-12">
            <h5>@Localizer["Registration is disabled."]</h5>
        </div>
    }

    @*<div class="col-md-6 col-md-offset-2">
            <section>
                <h4>Use another service to register.</h4>
                <hr />
                @{
                    if ((Model.ExternalLogins?.Count ?? 0) == 0)
                    {
                        <div>
                            <p>
                                There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                                for details on setting up this ASP.NET application to support logging in via external services.
                            </p>
                        </div>
                    }
                    else
                    {
                        <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                            <div>
                                <p>
                                    @foreach (var provider in Model.ExternalLogins)
                                    {
                                        <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                    }
                                </p>
                            </div>
                        </form>
                    }
                }
            </section>
        </div>*@
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
